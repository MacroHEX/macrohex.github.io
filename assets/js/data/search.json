[ { "title": "Instalando Hugo Framework", "url": "/posts/instalando-hugo/", "categories": "self-hosted, hugo, webpage", "tags": "servers, web, cloud, self-hosted", "date": "2022-09-08 17:00:00 -0400", "snippet": "Para probar nuevas cosas instalé el Framework de Hugo, al igual que jekyll (lo que utilizo en esta página) Hugo es un generador de sitios webs estaticos.Hugo cuenta con uan increíble velocidad, flexibilidad y es de código abierto.InstalaciónChocolatey (Windows)Utilizando el administrador de paquetes Chocolatey en Windows podemos instalar Hugo con una simple línea:choco install hugo -confirm Si instalamos node.js nos instalará chocolatey automaticamente Para más métodos de instalación visitar la página oficialCreando un Nuevo SitioNos dirigimos al directorio donde queremos crear nuestro proyecto y en la terminal ingresamoshugo new site {nombre-del-sitio}Para este ejemplo estaré creando una segunda página para mi documentación bajo el nombre de documentacion:Esto creará nuestro directorio documentacion al cual ingresaremos concd documentacionAñadiendo TemasDescargamos el tema de GitHub y lo añadimos al directorio de themes:# Para inicializar el directoriogit init # Para descargar la carpeta independientegit clone https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/ananke# Para descargar la carpeta como un submodulogit submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/anankeLuego añadimos el tema a nuestro archivo config.tomlecho \"theme = 'ananke'\" &gt;&gt; .\\config.toml En este ejemplo estoy utilizando la plantilla ananke, cada plantilla cuenta con su propio directorio con archivo de configuración de ejemplo en themes\\{tema}\\exampleSite\\config.tomlAñadiendo ContenidoPodemos añadir contenido manualmente creando un archivo en la carpeta content/&lt;CATEGORY&gt;/&lt;FILE&gt;/&lt;FORMAT&gt; y añadir el metadata individualmente, o podemos utilizar el comando new que nos genera el metadata automaticamente:hugo new posts/mi-primer-post.mdEditando ContenidoPara editar nuestro contenido podemos utilizar el editor de nuestra preferencia, en esta ocasión estaré utilizando Visual Code ejecutando code . desde el directorio. Los borradores no serán publicados, actualiza la cabecera a draft: false Más info aquíIniciando el ServidorEjecutaremos el comando permitiendo la visualización de los borradores:hugo server -D -p {numero-de-puerto}Ingresamos a nuestro sitio en http://localhost:{numero-de-puerto}/Ahora podremos añadir, editar y eliminar nuestros contenidos, un simple refresco de la página debería actualizar los cambios.En caso de no actualizarse detendremos el servidor con Ctrl+C y lo volveremos a ejecutar.Personalizando el TemaConfiguración del sitioAbrimos el archivo config.toml con un editor de texto:baseURL = 'http://example.org/'languageCode = 'en-us'title = 'My New Hugo Site'theme = 'ananke' Reemplazamos el campo en title por nuestro título para la página. Si vamos a subir la página a un dominio modificamos el campo en baseURL a la URL de nuestro dominio y para evitar problemas con el protocolo utilizamos //midominio.com/ En este caso cambimo el campo de languageCode = 'en-us' a languageCode = 'es-es' para tenerlo en español. Debemos recordar que cada tema tiene su propio config.toml de ejemplo para la configuraciónGenerando la Página EstáticaEs solo correr este comando:hugo -D La salida será en el directorio ./public/ por defecto" }, { "title": "Probando velocidad local de la red", "url": "/posts/speedtest-local/", "categories": "self-hosted, local network, test", "tags": "self-hosted, local network, test", "date": "2022-07-07 22:00:00 -0400", "snippet": "Hace unos meses cambie mi teléfono a uno con WiFi6 pero debido a que mi velocidad de Internet no es nada sorprendente como para llegar a usar la máxima capacidad del WiFi quede en la duda de cuanta era la velocidad de conexión local, con OpenSpeedTest Server al fin puedo probarlo!InstalaciónLo bajamos de la página oficialInstalamos y nos figurará esta pestaña.UtilizaciónDesde nuestro telefono u otro equipo en la red nos dirigimos a la dirección IP que nos dió, en este caso http://10.10.10.2:3000Y relizamos la pruebaDesde otro equipo WindowsDesde un Android" }, { "title": "Generando y Añadiendo clave SSH", "url": "/posts/ssh-github/", "categories": "github, ssh", "tags": "github, ssh", "date": "2022-07-06 14:00:00 -0400", "snippet": "Para poder autenticarnos con GitHub y no utilizar un token podemos utilizar una clave SSH, utilizando esto podemos utilizar una contraseña más simple para realizar nuestros cambios.Generando una nueva Clave SSHWindows Abrimos Git Bash Copiamos el texto de abajo reemplazando el correo por nuestro correo de GitHub. ssh-keygen -t ed25519 -C \"your_email@example.com\" Si utilizas un sistema legacy que no soporte el algoritmo Ed25519, utiliza: ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\" Esto generará nuestra nueva Clave SSH, utilizando nuestro correo como etiqueta. Cuando te pida una dirección para guardar la clave, presiona Enter. Esto guardará la clave en la dirección por defecto. &gt; Enter a file in which to save the key (/c/Users/you/.ssh/id_algorithm):[Press enter] En la terminal, escribe una contraseña para la clave. &gt; Enter passphrase (empty for no passphrase): [Type a passphrase] &gt; Enter same passphrase again: [Type passphrase again] Linux Abrimos la Terminalk Copiamos el texto de abajo reemplazando el correo por nuestro correo de GitHub. ssh-keygen -t ed25519 -C \"your_email@example.com\" Si utilizas un sistema legacy que no soporte el algoritmo Ed25519, utiliza: ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\" Esto generará nuestra nueva Clave SSH, utilizando nuestro correo como etiqueta. Cuando te pida una dirección para guardar la clave, presiona Enter. Esto guardará la clave en la dirección por defecto. &gt; Enter a file in which to save the key (/home/you/.ssh/id_ed25519_sk): [Press enter] En la terminal, escribe una contraseña para la clave. &gt; Enter passphrase (empty for no passphrase): [Type a passphrase] &gt; Enter same passphrase again: [Type passphrase again] Añadiendo la Clave a nuestra cuenta de GitHub Copiamos la clave generada. cat ~/.ssh/id_ed25519.pub Aquí podriamos usar el comando clip pero por alguna razón a mi no me funciona. En la esquina superior derecha, hacemos clic en nuestra foto de perfil y clic en Settings En la sección de “Access” clic en SSH and GPG keys. Clic en New SSH key o Add SSH key. En el campo de “Tittle” añadimos una descripción para la nueva clave. Por ejemplo como estoy utilizando un equipo Windows puedo llamar a la clave “Windows Personal”. Pega tu clave en el campo de “Key”. Clic en Add SSH key. Si se solicita introduce tu contraseña. Listo!Para más documentación aquí" }, { "title": "Controla tu Pc con Home Assistant", "url": "/posts/hass-agent/", "categories": "self-hosted, truenas scale, truenas, homeassistant, automatization", "tags": "servers, web, cloud, self-hosted, homeassistant, automatization", "date": "2022-07-05 19:00:00 -0400", "snippet": "HASS.AgentEs un cliente de Windows para Home Assistant, desarrollado en .NET 6 por LAB02.Fue creado para recibir notificaciones en la PC desde Home Assistant y para poder realizar acciones directamente desde la misma.CapturasNotificaciones Ejemplos de las notificaciones   InterfazInstalaciónLa instalación es sencilla, descargamos el último instalador, lo ejecutamos y listo!ConfiguraciónHome AssistantPrimero que nada necesitamos instalar a tráves de HACS. HASS.Agent Notifier HASS.Agent MediaPlayerAhora debemos añadir a nuestro configuration.yaml las líneasnotify: - name: \"Nombre PC\" platform: hass_agent_notifier resource: http://ipdelequipo:5115/notifyValidamos nuestra configuración y reiniciamos. Solo reiniciar si la configuración es valida de otra forma podemos quedar bloqueados de la interfaz web.Ahora necesitaremos un token para poder realizar la conexión con nuestro equipo.Nos dirigimos a nuestro usuario de Home Assistant y generamos un nuevo token de acceso de larga vida.WindowsIntroducimos nuestra dirección de home assistant.Por ejemplo: https://tunombre.duckdns.org:8123/ y en api pegamos el token que generamos." }, { "title": "Instalando el Subsistema de Windows para Linux (WSL)", "url": "/posts/instalando-wsl/", "categories": "wsl", "tags": "wsl", "date": "2022-06-29 10:00:00 -0400", "snippet": "El Subsistema de Windows para Linux permite a los desarrolladores ejecutar un entorno de GNU/Linux, incluida la mayoría de herramientas de línea de comandos, utilidades y aplicaciones, directamente en Windows, sin modificar y sin la sobrecarga de una máquina virtual tradicional o una configuración de arranque dual.¿Qué podemos hacer con esto? Podemos escoger nuestras distros favoritas de la Tienda de Microsoft Ejecutar herramientas comunes de línea de comandos, como grep, sed, awk u otros archivos binarios ELF-64. Ejecutar scripts de shell de Bash y aplicaciones de línea de comandos de GNU/Linux, como: Herramientas: vim, emacs, tmux. Lenguajes: NodeJS, Javascript, Python, Ruby, C/C++, C# &amp; F#, Rust, Go, etc. Servicios: SSHD, MySQL, Apache, lighttpd, MongoDB, PostgreSQL. Instalar software adicional mediante el administrador de paquetes de distribución de GNU/Linux. Invocar aplicaciones de Windows mediante un shell de línea de comandos de tipo UNIX. Invocar aplicaciones de GNU/Linux en Windows.VersionesEl Subsistema de Windows para Linux cuenta actualmente con dos versiones y la principal diferencia entre WSL1 y WSL2 es que WSL1 cuenta con una capa de compatibilidad para la transferencia de la ejecución del código entre Windows y Linux, en cambio WLS2 está basado en la virtualización de un sistema operativo Linux. Esta máquina virtual se ejecuta en el hipervisor nativo de Windows Hyper-V.InstalaciónPrerrequisitosDebemos contar con Windows 10 versión 2004 o posterior o Windows 11 Para comprobar la versión y el número de compilación de Windows, seleccione la tecla del logotipo de Windows + R, escriba winver y seleccione Aceptar. Para actualizar a la versión de Windows más reciente, seleccione Inicio&gt;Configuración&gt;Windows Update&gt;Buscar actualizaciones.Debemos revisar que tengamos activa la virtualización en la BIOS de nuestra placa madre.InstalandoRealizaremos la instalación de todo lo que necesitamos por medio de PowerShell en modo administrador y a continuación reiniciaremos el equipo.PowerShellwsl --installEste comando habilitará los componentes opcionales necesarios, descargará el kernel de Linux más reciente, establecerá WSL 2 como predeterminado e instalará una distribución de Linux automáticamente (Ubuntu de forma predeterminada).La primera vez que inicie una distribución de Linux recién instalada, se abrirá una ventana de la consola y se le pedirá que espere a que los archivos se descompriman y se almacenen en el equipo. Todos los inicios posteriores deberían tardar menos de un segundo en completarse. El comando anterior solo funciona si WSL no está instalado. Si ejecuta wsl --install y ve el texto de ayuda de WSL, intente ejecutar wsl --list --online para ver una lista de distribuciones disponibles y ejecutewsl --install -d &lt;DistroName&gt; para instalar una distribución.TroubleshootingSi recibimos un error de que no se puede iniciar la virtualización debemos revisar que tengamos activa la opción en la BIOS de nuestro sistema y en Panel de Control&gt;Programas&gt;Activar o desactivar las características de Windows y activamos Hyper-V, Virtual Machine Platform y Windows Hypervisor Platform En mi caso necesite activar los 3 para que funcione el Subsistema.Para la documentación oficial aquí" }, { "title": "Generando Certificados SSL Autofirmados", "url": "/posts/generando-certificados/", "categories": "self-hosted, certificate, openSSL", "tags": "self-hosted, cloud, certificate, security, openSSL", "date": "2022-06-28 17:00:00 -0400", "snippet": "Un problema común con el que podemos encontrarnos durante nuestra travesia montando nuestro Home Lab es que nuestras webs figuren como una conexión No segura.Esto es debido a que no contamos con un certificado SSL, por decirlo de una manera resumida el certificado SSL es un poco de código en el servidor web que asegura que la conexión sea segura. Cuando la página web contacta a tu servidor, el certificado habilita una conexión encriptada. Los certificados autofirmados son recomendados para la red local no para servicios públicos.Generando los Certificados AutofirmadosGeneramos una Autoridad de Certificación (CA)Utilizaremos OpenSSL para generar nuestros certificados.Viene instalado por defecto en las distribuciones de Linux pero también puede realizarse desde Powershell en Windows. Generamos una clave RSA openssl genrsa -aes256 -out ca-key.pem 4096 -aes256 es la encriptación de 256 bits Generamos un Certificado Público del CA openssl req -new -x509 -sha256 -days 365 -key ca-key.pem -out ca.pem Como vamos a utilizar el certificado internamente podemos aumentar la validez del certificado. Generando el Certificado Creamos una clave RSA openssl genrsa -out cert-key.pem 4096 Creamos una Solicitud de Firma de Certificado (CSR) openssl req -new -sha256 -subj \"/CN=yourcn\" -key cert-key.pem -out cert.csr Anteriormente el sujeto era importante para la validación pero ya no, así que podemos poner lo que queramos en \"/CN=yourcn\". Creamos un archivo extfile con los nombres alternativos echo \"subjectAltName=DNS:your-dns.record,IP:257.10.10.1\" &gt;&gt; extfile.cnf# opcionalecho extendedKeyUsage = serverAuth &gt;&gt; extfile.cnf Aquí ingresamos nuestro DNS e IP a las que queremos validar. Podemos utilizar wildcards en el DNS tales como *.direccion. Creamos el Certificado openssl x509 -req -sha256 -days 365 -in cert.csr -CA ca.pem -CAkey ca-key.pem -out cert.pem -extfile extfile.cnf -CAcreateserial Nuevamente podemos aumentar la validez del certificado. cat cert.pem &gt; fullchaim.pem cat ca.pem &gt;&gt; fullchaim.pem Creamos un archivo fullchaim que contenga las dos claves que necesitamos. Formatos de CertificadosLos Certificados X.509 existen en los Formatos Base64 PEM (.pem, .crt, .ca-bundle), PKCS#7 (.p7b, p7s) y Formatos Binarios DER (.der, .cer), PKCS#12 (.pfx, p12).Conversión de Certificados COMANDO CONVERSIÓN openssl x509 -outform der -in cert.pem -out cert.der PEM a DER openssl x509 -inform der -in cert.der -out cert.pem DER a PEM openssl pkcs12 -in cert.pfx -out cert.pem -nodes PFX a PEM Verificar Certificadosopenssl verify -CAfile ca.pem -verbose cert.pemInstalar la Autoridad de Certificación (CA) en root CAEn Debian &amp; Derivados Mover el CA (ca.pem) en /usr/local/share/ca-certificates/ca.crt. Actualizar la librería de certificados con: sudo update-ca-certificates Para más documentación aquí y aquí.En Fedora Mover el CA (ca.pem) en /etc/pki/ca-trust/source/anchors/ca.pem or /usr/share/pki/ca-trust-source/anchors/ca.pem Ahora ejecuta (con sudo si es necesario): update-ca-trust Para más documentación aquí.En ArchSystem-wide – Arch(p11-kit) (De la wiki de arch) Ejecuta (Como root) trust anchor --store myCA.crt El certificado será escrito en /etc/ca-certificates/trust-source/myCA.p11-kit y los directorios “legacy” se actualizarán automáticamente. Si recibes el error “no configured writable location” o similar, importa el CA manualmente: Copia el certificado en el directorio /etc/ca-certificates/trust-source/anchors y entonces update-ca-trust wiki En WindowsAsumiento que el directorio a nuestra Autoridad de Certificacion (CA) es C:\\ca.pem, ejecutamos:Import-Certificate -FilePath \"C:\\ca.pem\" -CertStoreLocation Cert:\\LocalMachine\\Root Cambia -CertStoreLocation a Cert:\\CurrentUser\\Root en caso de que quieras confiar en los certificados solo para el usuario logueado.OEn la Terminal, ejecuta:certutil.exe -addstore root C:\\ca.pem certutil.exe es una herramienta integrada que agrega confianza en todo el sistema.En AndroidLos pasos exactos cambian entre dispositivos, aquí va una guía generalizada: Abrir las configuraciones Ubicar la sección Encryption and Credentials Normalmente ubicada en Settings &gt; Security &gt; Encryption and Credentials Seleccionar Install a certificate Seleccionar CA Certificate Ubicar el archivo ca.pem en la memoria utilizando el administrador de archivos. Seleccionarlo. Listo! Tengo mi teléfono en inglés así que no se como son las opciones en español." }, { "title": "Jellyfin una alternativa Open-source a Plex", "url": "/posts/instalando-jellyfin/", "categories": "self-hosted, media, open-source", "tags": "self-hosted, cloud, web, media", "date": "2022-06-28 14:00:00 -0400", "snippet": "Jellyfin es solución multimedia construida por la comunidad.Transmite a cualquier dispositivo desde tu propio servidor, sin trabas. Tus archivos, tu servidor, a tu manera.InstalaciónJellyfin cuenta con varios medios de instalación y versiones Estables e Inestables.En esta oportunidad voy a instalarlo en mi equipo con Windows para aprovechar el codificador NVENC de mi tarjeta gráfica. Si tenemos un NAS con una gráfica para el encodeo podemos instalar Jellyfin allíPasos: Visitamos la página oficial y seleccionamos nuestro instalador, en este caso utilizaré installer/jellyfin_10.8.1_windows-x64.exe Ingresamos en el navegador nuestra dirección local más el puerto 8096 para ingresar a la interfaz web. http://SERVER_IP:8096 Por el momento solo podremos utilizar http porque para configurar el https necesitamos generar una certificado SSL y utilizar un proxy inverso. Seguimos el asistente de instalación Las librerías y usuarios pueden ser añadidos más adelante desde el dashboard. Recuerda el usuario y la contraseña. Ahora podemos proteger nuestro servidor Crea un certificado SSL y añadela en la página de Networking Pon tu servidor tras un proxy inverso. Solo permite conexiones locales y evita liberar puertos. Si solo queremos utilizarlo localmente podemos permitir la salida al puerto 8096 en nuestro firewall. Solo si no vamos a acceder al servidor externamente. Disfruta!Añadiendo libreríasLas librerías son una colección virtual de media que pueden contener archivos de varios directorios en el servidor.La primera vez que abras el servidor aparecerá una página para crear librerías, pero pueden añadirse o eliminarse en cualquier momento desde las configuraciones.Loguea en la interfaz web en el navegador.En el menu que aparece: Admin &gt; Dashboard. Server &gt; Libraries. Selecciona “Add Media Library”.El servidor ahora escaneará los directorios y añadirá tu media.Habrá una barra indicando el progreso. Pueden utilizarse diferentes medios como películas, shows y música.También soporta libros o fotos. Utiliza directorios separados para cada tipo de medios para evitar problemas con los resultados de metada." }, { "title": "Configurando Duck DNS en Home Assistant", "url": "/posts/hassio-duckdns/", "categories": "self-hosted, truenas scale, truenas, homeassistant, automatization", "tags": "servers, web, cloud, self-hosted, homeassistant, automatization, duckdns", "date": "2022-06-28 11:00:00 -0400", "snippet": "Duck DNS es un servicio gratuito que se encarga de dirigir direcciones IP a subdominios del tipo duckdns.org.El servicio de DDNS asocia nuestra IP pública a un dominio. De esta forma podemos acceder a nuestro servicio sin necesidad de escribir nuestra IP.PreparaciónNos logueamos en Duck DNS utilizando cualquiera de los métodos disponibles.Ahora necesitamos realizar el port forwarding para poder ver nuestra instancia de Home Assistant en Internet. Pasamos el puerto 8123 a 8123 en el protocolo TCP y 443 a 8123 también en TCP Instrucciones de Port Forwading aquíInstalaciónPrimero nos dirigimos a la tienda de add-ons e instalamos Duck DNSSeleccionamos Start on boot y WatchdogAntes de iniciarlo, nos dirigimos a la pestaña de configuración y editamos en YAML. La nueva versión de Home Assitant cuenta con una interfaz para cargar los datos pero por alguna razón no me aceptó la configuración al hacerlo con la interfaz.Añadimos nuestro dominio de DuckDNS junto al token que nos dió y cambiamos accept_terms: false a accept_terms: truedomains: - midomio.duckdns.orgtoken: mitokenaliases: []lets_encrypt: accept_terms: true algo: secp384r1 certfile: fullchain.pem keyfile: privkey.pemseconds: 300Iniciamos el servico y refrescamos el Log hasta que leamos que se generó el certificado.Una vez que se haya generado el certificado debemos añadir esto a configuration.yaml# Loads default set of integrations. Do not remove.default_config:# Añadimos estohttp: ssl_certificate: /ssl/fullchain.pem ssl_key: /ssl/privkey.pem ip_ban_enabled: true login_attempts_threshold: 5Vamos a Developer Tools validamos la configuración y reiniciamos Home Assistant Desde este momento la IP de nuestro Home Assistant va a cambiar a https://midominio.duckdns.org:8123 Vamos a poder seguir conectandonos localmente entrando a https://ip-del-equipo:8123. pero como generamos el certificado para el dominio de duckdns nos va a decir que el sitio no es seguro." }, { "title": "Home Assistant OS en TrueNAS Scale", "url": "/posts/hassio-truenas/", "categories": "self-hosted, truenas scale, truenas, homeassistant, automatization", "tags": "servers, web, cloud, self-hosted, homeassistant, automatization", "date": "2022-06-28 00:00:00 -0400", "snippet": "Home Assistant es un software gratuito y de código abierto para la automatización del hogar diseñado para ser un sistema de control central para dispositivos domésticos inteligentes con un enfoque en el control local y la privacidad.El ProblemaVisita https://www.home-assistant.io/installation/ para más informaciónComo podemos observar la versión que tiene todas las funcionalidades que podemos necesitar es Home Assistant OS pero la única forma de correrlo es virtualizandolo.Así que utilizaremos la capacidad de virtualización de TrueNAS Scale para crear una instancia de Home Assistant OS.InstalaciónCreamos un directorio en una de nuestras pools, en este caso voy a utilizar mi dataset vms:Creamos el directorio utilizando el shell de TrueNAS:/mnt/&lt;Nombre-Pool&gt;/&lt;Nombre-Dataset&gt;mkdir hasscd hass/Ahora una vez dentro del directorio que acabamos de crear utilizamos wget para obtener el archivo ova.wget https://github.com/home-assistant/operating-system/releases/download/8.2/haos_ova-8.2.ova Visitar la página de releases para seleccionar la última versión del sistema operativo.Una vez descargado el archivo lo descomprimimos utilizando tar:tar -xvf haos_ova-8.2.ovaAhora convertimos el vmdk a una imagen raw, utilizando el directorio completo para la fuente:qemu-img convert -f vmdk -O raw /mnt/&lt;Nombre-Pool&gt;/&lt;Nombre-Dataset&gt;/hass/home-assistant.vmdk hassos.imgCreamos un Zvol utilizando la interfaz web de TrueNAS. Hay que asegurarse de que el volumen sea lo suficientemente grande para que dd pueda completarse, en este caso utilice 50GibAhora utilizamos dd para escribir la imagen en nuestro Zvol.dd if=hassos.img of=/dev/&lt;Nombre-Pool&gt;/&lt;Nombre-Zvol&gt;Creamos una máquina virtual utilizando la interfaz gráfica y seleccionamos nuestro zvol como disco.Requisitos minimos recomendados: 2GB RAM 32Gb Almacenamiento 2vCPUTodo esto puede ser expandido según la necesidad de cada sistema.Iniciamos la máquina virtual y esperamos que termine el proceso de instalación." }, { "title": "Instalando TrueNAS Scale", "url": "/posts/instalando-truenas/", "categories": "self-hosted, truenas scale, truenas", "tags": "servers, web, cloud, self-hosted", "date": "2022-06-27 00:00:00 -0400", "snippet": "TrueNAS Scale es un sistema operativo basado en Linux que proporciona servicios de almacenamiento en red.Es un sistema operativo gratuito, open-source y de software libre que permite convertir una computadora personal en un soporte de almacenamiento accesible desde red, por ejemplo para almacenamientos masivos de información, música, backups, etc. Además de añadir el poder desplegar aplicaciones en contenedores de docker, el uso de kubernetes y hasta virtualizacion de servicios u otros sistemas.InstalaciónLo primero que debemos hacer es ir a la página de TrueNAS Scale y descargar la última versión estable de la misma.Utilizamos baelenaEtcher para crear el USB Booteable.Una vez creado conectamos el USB a la computadora para iniciar el proceso, mientras inicia presiona la tecla para seleccionar el dispositivo booteable.Selecciona el dispositivo para bootear. Si no se reconoce el USB prueba conectandolo en otro puertoUna vez se haya iniciado el instalador, sigue estos pasos:Selecciona Install/Upgrade.Selecciona el disco para la instalación. Es recomendable realizar una instalación espejada por redundancia aunque no es necesaria.Selecciona Yes.Selecciona Fresh Install para realizar una instalación limpia de TrueNAS SCALE. Esto borrará todo el disco seleccionadoSi el disco tiene suficiente espacio libre, puedes escoger asignar un partición de intercambio para mejorar el rendimiento.Introduce una contraseña para el usuario root para loguearse en la interfaz web.Luego de seguir estos pasos, reinicia el sistema y retira el medio de instalación.Primer LogueoEn un equipo conectado a la misma red local del sistema TrueNAS, intruduce la dirección IP en un navegador para conectarte a la intefaz web. Puedes asignar una IP fija desde el router utilizando la MAC del equipo.Ejemplo:https://10.0.0.xhttps://10.10.10.xhttps://192.168.100.xEscribe root en el usuario y la contraseña que creaste anteriormente.Luego de loguearte, verás el Dashboard del sistema.Este Dashboard muestra información sobre la versión instalada, uso de los componentes del sistema, y tráfico de red.Desde aquí tendrás acceso a todas las opciones que TrueNAS ofrece.Creando nuestra primera PoolLa sección de Storage tiene controles para crear pools, snapshots y manejo de los discos.Para crear una pool vamos Storage &gt; Pools y seleccionados ADD.Como inicialmente no tendremos ninguna seleccionamos Create new pool y CREATE POOL para abrir el administrador.Escribimos un nombre para la pool. No utilices nombres con espacios porque esto podría causar problemas." }, { "title": "Conoce Jekyll - El Generador de Sitio Web Estático", "url": "/posts/como-usar-jekyll/", "categories": "self-hosted, jekyll, webpage", "tags": "servers, web, cloud, self-hosted", "date": "2022-06-27 00:00:00 -0400", "snippet": "Jekyll es una generador de sitio web estático que transforma texto plano en un bonito sitio web estático. Puede ser utilizado para un sitio de documentación, un blog, un sitio de evento, o básicamente para lo que quieras. Es rápido, seguro, fácil de utilizar y de código libre.Deja tu ⭐ al repo de jekyll y el repo de Chrirpy themePrerrequisitos Ruby RubyGems GCC Make Puedes realizarlo desde Windows utilizando el Subsistema de Windows para Linux (WSL)Ubuntu/Debiansudo apt update &amp;&amp; sudo apt upgradesudo apt-get install ruby-full build-essential zlib1g-devCreando la web utilizando una plantillaVisita: https://github.com/cotes2020/jekyll-theme-chirpy#quick-startTras crear un repositorio basado en la plantilla, clonamos el repositorio Crea el repositorio siguiendo esta nomenclatura mi-usuario.github.io No clonar el repositorio estando en super usuario.# Con SSHgit clone git@github.com:&lt;TU-USUARIO&gt;/&lt;NOMBRE-REPO&gt;.git# Con HTTPSgit clone https://github.com/&lt;TU-USUARIO&gt;/&lt;NOMBRE-REPO&gt;.gitEntonces instalamos las dependenciascd nombre-repobundleLuego de realizar los cambios, commit y push a gitgit add .git commit -m \"Algunos cambios\"git push Para visualizar la web debemos cambiar una configuración en nuestro repo.EdiciónUtilicé VS Code con WSLcode .Comandos de JekyllInicializar el servidor localbundle exec jekyll sCreando una PublicaciónJekyll sigue una nomenclatura para nombrar las páginas y publicacionesCrear un archivo en _posts con el formato:AÑO-MES-DIA-TITULO.mdPor ejemplo:2022-06-26-documentacion.md2022-06-30-pruebas.md Verificar la fecha y hora, así como la zona horaria si no se ve la publicación.Vinculando archivos localesVincular una imagen:... como se puede apreciar en la captura:![Una captura](/assets/screenshot.png)Vincular un archivo:... puedes [descargar el PDF](/assets/algo.pdf) aquí.Configurando el RepositorioAntes de poder utilizar nuestro mi-usuario.github.io ingresamos en nuestro directorio y nos dirigmos a Settings&gt;Pages y cambiamos la rama de main a gh-pages.Guardamos y ya podremos ver nuestra página con github pages.Ejemplo: https://macrohex.github.io/Ejemplos de MarkdownSi queremos ayuda con el markdown, revisa la tablaPara más sintaxis para el tema de Chirpy vista la demo de como hacer publicacioneshttps://chirpy.cotes.page/posts/write-a-new-post/" } ]
